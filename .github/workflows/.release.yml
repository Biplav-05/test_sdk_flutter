name: Release & Publish to pub.dev

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Specify release type: regular, alpha, beta, or rc'
        required: true
        default: 'regular'

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      RELEASE_TYPE: ${{ github.event.inputs.release-type }}

    steps:
      - name: Validate branch
        run: |
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "Error: This workflow can only be run on the main branch."
            exit 1
          fi

      - name: Validate release type
        run: |
          if [[ "$RELEASE_TYPE" != "regular" && "$RELEASE_TYPE" != "alpha" && "$RELEASE_TYPE" != "beta" && "$RELEASE_TYPE" != "rc" ]]; then
            echo "Error: Invalid release type '$RELEASE_TYPE'. It must be one of: regular, alpha, beta, or rc."
            exit 1
          fi

      - name: Checkout source code
        uses: actions/checkout@v3

      # Manually install Dart SDK
      - name: Install Dart SDK
        run: |
          sudo apt-get update -y
          sudo apt-get install apt-transport-https -y
          sudo sh -c 'wget -qO- https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'
          echo "deb [arch=amd64] https://storage.googleapis.com/download/dartlang/linux/debian stable main" | sudo tee /etc/apt/sources.list.d/dart_stable.list
          sudo apt-get update -y
          sudo apt-get install dart -y

      - name: Install Flutter dependencies
        run: flutter pub get

      - name: Install Node.js dependencies
        run: npm ci

      - name: Set Git user
        run: |
          git config --global user.email "${{ secrets.GIT_USER_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USER_NAME }}"

      - name: Run release-it
        run: |
          if [ "$RELEASE_TYPE" == "regular" ]; then
            npx release-it
          else
            npx release-it --preRelease="$RELEASE_TYPE"
          fi
        env:
          TOKEN_GITHUB: ${{ secrets.TOKEN_GITHUB }}
          PUB_DEV_TOKEN: ${{ secrets.PUB_DEV_TOKEN }}

      - name: Print success message
        if: success()
        run: echo "Release and publishing completed successfully!"

      - name: Handle failure
        if: failure()
        run: echo "Release process failed."
